"""empty message

Revision ID: 54ba313331b1
Revises: 288a5936fd3b
Create Date: 2021-06-05 14:59:48.655985

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '54ba313331b1'
down_revision = '288a5936fd3b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('products',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('category', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('schema_migrations',
    sa.Column('version', sa.BigInteger(), nullable=False),
    sa.Column('inserted_at', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('version')
    )
    op.create_table('spc_raw_data',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('birthday', sa.String(length=255), nullable=True),
    sa.Column('avg_income', sa.String(length=255), nullable=True),
    sa.Column('latitude', sa.String(length=255), nullable=True),
    sa.Column('longitude', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=60), nullable=True),
    sa.Column('password', sa.String(length=60), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username'),
    sa.UniqueConstraint('username')
    )
    op.create_table('customers',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('country', sa.String(length=255), nullable=True),
    sa.Column('state', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=255), nullable=True),
    sa.Column('district', sa.String(length=255), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('avg_income', sa.Numeric(), nullable=True),
    sa.Column('spc_raw_data_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['spc_raw_data_id'], ['spc_raw_data.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('customers_products',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('customer_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('product_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('inserted_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('kaggle_raw_data',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('customer_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('reference_id', sa.String(length=255), nullable=True),
    sa.Column('branch', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=255), nullable=True),
    sa.Column('state', sa.String(length=255), nullable=True),
    sa.Column('age', sa.String(length=255), nullable=True),
    sa.Column('gender', sa.String(length=255), nullable=True),
    sa.Column('total_limit', sa.String(length=255), nullable=True),
    sa.Column('available_limit', sa.String(length=255), nullable=True),
    sa.Column('date', sa.String(length=255), nullable=True),
    sa.Column('value', sa.String(length=255), nullable=True),
    sa.Column('group', sa.String(length=255), nullable=True),
    sa.Column('purchase_city', sa.String(length=255), nullable=True),
    sa.Column('purchase_country', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('save_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('product_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('costumer_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['costumer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transactions',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('customer_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('kaggle_raw_data_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('value', sa.Numeric(), nullable=True),
    sa.Column('total_limit', sa.Numeric(), nullable=True),
    sa.Column('available_limit', sa.Numeric(), nullable=True),
    sa.Column('category', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=255), nullable=True),
    sa.Column('country', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['kaggle_raw_data_id'], ['kaggle_raw_data.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transactions')
    op.drop_table('save_data')
    op.drop_table('kaggle_raw_data')
    op.drop_table('customers_products')
    op.drop_table('customers')
    op.drop_table('users')
    op.drop_table('spc_raw_data')
    op.drop_table('schema_migrations')
    op.drop_table('products')
    # ### end Alembic commands ###
